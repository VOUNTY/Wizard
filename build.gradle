plugins {
    id 'java'
    id 'java-library'
    id 'maven-publish'
}

group 'net.vounty.wizard'
version '1.0.3-RELEASE'

java {
    sourceCompatibility = JavaVersion.VERSION_16
    targetCompatibility = JavaVersion.VERSION_16
}

repositories {
    mavenLocal()
    mavenCentral()
    jcenter()
}

dependencies {
    implementation "org.mindrot:jbcrypt:0.4"
    implementation 'com.google.code.gson:gson:2.9.0'
    implementation 'org.jline:jline:3.21.0'
    implementation "com.sparkjava:spark-core:2.9.4"
    implementation "org.apache.commons:commons-lang3:3.12.0"
    implementation "ch.qos.logback:logback-classic:1.2.11"

    compileOnly 'org.projectlombok:lombok:1.18.24'
    annotationProcessor 'org.projectlombok:lombok:1.18.24'
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

jar {
    manifest {
        attributes(
                'Main-Class': 'net.vounty.wizard.Bootstrap',
                'Implementation-Version': project.version,
        )
    }

    from {
        duplicatesStrategy = DuplicatesStrategy.EXCLUDE
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }
}

task sourcesJar(type: Jar, dependsOn: classes) {
    archiveClassifier.set('sources')
    from sourceSets.main.allSource
}

publishing {
    publications {
        maven(MavenPublication) {
            groupId = project.group
            artifactId = 'Wizard'
            version = project.version

            from components.java
            artifact sourcesJar
        }
    }

    repositories {
        maven {
            url = "https://wizard.vounty.net/${project.version.endsWith("RELEASE") ? 'releases' : 'snapshots'}"
            credentials {
                username = project.hasProperty("deployName") ? project.property("deployName") : ""
                password = project.hasProperty("deployPassword") ? project.property("deployPassword") : ""
            }
        }
    }
}